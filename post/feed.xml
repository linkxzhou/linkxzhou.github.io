<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on linkxzhou的博客</title>
    <link>https://linkxzhou.github.io:443/post/</link>
    <description>Recent content in Posts on linkxzhou的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 01 Jul 2017 18:20:42 +0800</lastBuildDate>
    
	<atom:link href="https://linkxzhou.github.io:443/post/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>protothreads协程库详解</title>
      <link>https://linkxzhou.github.io:443/post/protothreads%E5%8D%8F%E7%A8%8B%E5%BA%93%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 01 Jul 2017 18:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/protothreads%E5%8D%8F%E7%A8%8B%E5%BA%93%E8%AF%A6%E8%A7%A3/</guid>
      <description>协程 实际上协程的概念比线程还要早，按照Knuth的说法&amp;rdquo;子例程是协程的特例&amp;rdquo;，一个子例程就是一次子函数调用，那么实际</description>
    </item>
    
    <item>
      <title>state - 状态模式</title>
      <link>https://linkxzhou.github.io:443/post/c&#43;&#43;%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8Bstate/</link>
      <pubDate>Mon, 12 Jun 2017 20:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/c&#43;&#43;%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8Bstate/</guid>
      <description>原理 在&amp;lt;设计模式：可复用对象软件基础&amp;gt;一书中这样描述TCPConnection的状态变化如何使用状态模式： 1.一个TCPConn</description>
    </item>
    
    <item>
      <title>关于modified_utf-8的坑与思考</title>
      <link>https://linkxzhou.github.io:443/post/%E5%85%B3%E4%BA%8Emodified-utf-8%E7%9A%84%E5%9D%91%E4%B8%8E%E6%80%9D%E8%80%83/</link>
      <pubDate>Sun, 04 Jun 2017 02:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/%E5%85%B3%E4%BA%8Emodified-utf-8%E7%9A%84%E5%9D%91%E4%B8%8E%E6%80%9D%E8%80%83/</guid>
      <description>背景 事情缘于同事调试代码中的一段未知bug，java的jni传输数据到unity层，发现在unity层中的emoji表情不能显示，处于对技术</description>
    </item>
    
    <item>
      <title>cmake实战</title>
      <link>https://linkxzhou.github.io:443/post/cmake%E5%AE%9E%E6%88%98/</link>
      <pubDate>Wed, 12 Apr 2017 20:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/cmake%E5%AE%9E%E6%88%98/</guid>
      <description>最近在重新编译luvit时，发现luvit的源码文件过于分散，于是准备重写makefile，但是luvit对各个平台都做了兼容，如果直接重写</description>
    </item>
    
    <item>
      <title>记一次线程之间的数据消费的优化</title>
      <link>https://linkxzhou.github.io:443/post/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BA%BF%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E6%B6%88%E8%B4%B9%E7%9A%84%E4%BC%98%E5%8C%96/</link>
      <pubDate>Mon, 10 Apr 2017 20:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BA%BF%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E6%B6%88%E8%B4%B9%E7%9A%84%E4%BC%98%E5%8C%96/</guid>
      <description>背景 最近应客户端的需求，为客户端开发了一套c++版本的日志系统(后续会专门讲述客户端日志系统的文章)，其中有个功能点是需要每条日志发送到网络</description>
    </item>
    
    <item>
      <title>理解http之content-type</title>
      <link>https://linkxzhou.github.io:443/post/%E7%90%86%E8%A7%A3http%E4%B9%8Bcontent-type/</link>
      <pubDate>Sun, 02 Apr 2017 20:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/%E7%90%86%E8%A7%A3http%E4%B9%8Bcontent-type/</guid>
      <description>在http的规范中有OPTIONS，GET，HEAD，POST，PUT，DELETE，TRACE，CONNECT，那么发送这些类型的请求会在</description>
    </item>
    
    <item>
      <title>读&lt;linux高性能服务器编程&gt;总结(网络基础篇)</title>
      <link>https://linkxzhou.github.io:443/post/%E8%AF%BBlinux%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%96%E7%A8%8B%E6%80%BB%E7%BB%93%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%AF%87/</link>
      <pubDate>Sat, 01 Apr 2017 20:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/%E8%AF%BBlinux%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%96%E7%A8%8B%E6%80%BB%E7%BB%93%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%AF%87/</guid>
      <description>总结 -- 其实很早之前看完了一遍游双的，一直想结合自己的平常的积累写一些总结，碍于工作太忙，这事情直到现在才开始写总结博文。本书主要分为三个部分</description>
    </item>
    
    <item>
      <title>bitcask存储</title>
      <link>https://linkxzhou.github.io:443/post/bitcask%E5%AD%98%E5%82%A8/</link>
      <pubDate>Sun, 12 Mar 2017 20:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/bitcask%E5%AD%98%E5%82%A8/</guid>
      <description>Bitcask的存储介绍 对于大多数存储系统中，其中读的性能一般都会成为瓶颈，以数据库为例，关系型数据库的底层存储为了解决快速查找的问题，一般</description>
    </item>
    
    <item>
      <title>tcpcopy的使用与原理</title>
      <link>https://linkxzhou.github.io:443/post/tcpcopy%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 12 Dec 2016 18:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/tcpcopy%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%8E%9F%E7%90%86/</guid>
      <description>tcpcopy介绍 tcpcopy是一个能将线上环境数据导到测试环境的后台工具，线上的数据对于应用的完整性测试是非常重要， 但是以往将正式环境的</description>
    </item>
    
    <item>
      <title>弱网测试--网络环境构建</title>
      <link>https://linkxzhou.github.io:443/post/%E5%BC%B1%E7%BD%91%E6%B5%8B%E8%AF%95--%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Thu, 01 Dec 2016 20:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/%E5%BC%B1%E7%BD%91%E6%B5%8B%E8%AF%95--%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/</guid>
      <description>按照移动特性，各种网络连接协议不同，导致通信的信号不同，速率也不同，影响app的加载时间、可用性、稳定性，因此对于应用构建弱网测试环境是必要</description>
    </item>
    
    <item>
      <title>hugo搭建github博客过程</title>
      <link>https://linkxzhou.github.io:443/post/hugo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Wed, 12 Oct 2016 18:20:42 +0800</pubDate>
      
      <guid>https://linkxzhou.github.io:443/post/hugo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/</guid>
      <description>安装 1.安装hugo hugo是一个快速的静态网站引擎，使用Go语言开发，可以用Markdown格式的文章生成一个完整的静态网站，然后托管到自</description>
    </item>
    
  </channel>
</rss>